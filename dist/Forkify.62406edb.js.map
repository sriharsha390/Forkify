{"mappings":"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","sources":["src/js/controller.js"],"sourcesContent":["const recipeContainer = document.querySelector('.recipe');\n\nconst timeout = function (s) {\n  return new Promise(function (_, reject) {\n    setTimeout(function () {\n      reject(new Error(`Request took too long! Timeout after ${s} second`));\n    }, s * 1000);\n  });\n};\n\n// https://forkify-api.herokuapp.com/v2\nconst Dummy = {\n  data: {\n    recipe: {\n      cooking_time: 120,\n      id: '664c8f193e7aa067e94e8297',\n      image_url: 'http://forkify-api.herokuapp.com/images/100111309d9.jpg',\n      ingredients: [\n        {\n          description: 'white sugar',\n          quantity: 1.5,\n          unit: 'tsps',\n        },\n        {\n          description: 'warm water',\n          quantity: 1,\n          unit: 'cup',\n        },\n        {\n          description: 'active dry yeast',\n          quantity: 1.5,\n          unit: 'tsps',\n        },\n        {\n          description: 'olive oil',\n          quantity: 1,\n          unit: 'tbsp',\n        },\n        {\n          description: 'salt',\n          quantity: 0.5,\n          unit: 'tsp',\n        },\n        {\n          description: 'all-purpose flour',\n          quantity: 2,\n          unit: 'cups',\n        },\n        {\n          description: 'can crushed tomatoes',\n          quantity: 1,\n          unit: '',\n        },\n        {\n          description: 'packed brown sugar',\n          quantity: 1,\n          unit: 'tbsp',\n        },\n        {\n          description: 'garlic powder',\n          quantity: 0.5,\n          unit: 'tsp',\n        },\n        {\n          description: 'olive oil',\n          quantity: 1,\n          unit: 'tsp',\n        },\n        {\n          description: 'salt',\n          quantity: 0.5,\n          unit: 'tsp',\n        },\n        {\n          description: 'shredded mozzarella cheese divided',\n          quantity: 3,\n          unit: 'cups',\n        },\n        {\n          description: 'bulk italian sausage',\n          quantity: 0.5,\n          unit: 'pound',\n        },\n        {\n          description: 'package sliced pepperoni',\n          quantity: 1,\n          unit: '',\n        },\n        {\n          description: 'package sliced fresh mushrooms',\n          quantity: 1,\n          unit: '',\n        },\n        {\n          description: 'green bell pepper chopped',\n          quantity: 1,\n          unit: '',\n        },\n        {\n          description: 'red bell pepper chopped',\n          quantity: 1,\n          unit: '',\n        },\n      ],\n      publisher: 'All Recipes',\n      servings: 4,\n      source_url:\n        'http://allrecipes.com/Recipe/Double-Crust-Stuffed-Pizza/Detail.aspx',\n      title: 'Double Crust Stuffed Pizza',\n    },\n  },\n  status: 'success',\n};\n\n///////////////////////////////////////\nfunction qs(params) {\n  return document.querySelector(params);\n}\nconst results = qs('.results');\nasync function getDishes(dish) {\n  try {\n    console.log('fetching');\n    const res = await fetch(\n      `https://forkify-api.jonas.io/api/v2/recipes/?search=${dish}`\n      // `https://www.themealdb.com/api/json/v1/1/search.php?s=${dish}`\n    );\n    const data = await res.json();\n    if (!res.ok) throw new Error(`${data.message} (${res.status})`);\n    return data;\n  } catch (err) {\n    throw err;\n  }\n}\nasync function getRecipe(id) {\n  try {\n    console.log('fetching');\n    const res = await fetch(\n      `https://forkify-api.jonas.io/api/v2/recipes/${id}`\n      // `https://www.themealdb.com/api/json/v1/1/search.php?s=${dish}`\n    );\n    const data = await res.json();\n    if (!res.ok) throw new Error(`${data.message} (${res.status})`);\n    return data;\n  } catch (err) {\n    throw err;\n  }\n}\n//// Showing results///\nconst searchForm = qs('.search');\nsearchForm.addEventListener('submit', async function (e) {\n  e.preventDefault();\n  const dishName = qs('.search__field').value;\n  getDishes(dishName).then(data => {\n    console.log(data.data);\n    const { recipes } = data.data;\n    console.log(recipes);\n\n    recipes.forEach(r => {\n      const html = `\n      <li class=\"preview\">\n            <a class=\"preview__link preview__link--active\" href=\"${r.id}\">\n              <figure class=\"preview__fig\">\n                <img src=${r.image_url} alt=\"Test\" />\n              </figure>\n              <div class=\"preview__data\">\n                <h4 class=\"preview__title\">${r.title}</h4>\n                <p class=\"preview__publisher\">${r.publisher}</p>\n                <div class=\"preview__user-generated\">\n                  <svg>\n                    <use href=\"src/img/icons.svg#icon-user\"></use>\n                  </svg>\n                </div>\n              </div>\n            </a>\n          </li>\n      `;\n      results.insertAdjacentHTML('afterbegin', html);\n    });\n  });\n});\n\nfunction renderRecipe() {\n  // getRecipe('664c8f193e7aa067e94e8297').then(data => {\n  let { recipe } = Dummy.data;\n  console.log(recipe);\n  const html = `\n    <figure class=\"recipe__fig\">\n          <img src=\"${recipe.image_url}\" alt=\"Tomato\" class=\"recipe__img\" />\n          <h1 class=\"recipe__title\">\n            <span>${recipe.title}</span>\n          </h1>\n        </figure>\n\n        <div class=\"recipe__details\">\n          <div class=\"recipe__info\">\n            <svg class=\"recipe__info-icon\">\n              <use href=\"src/img/icons.svg#icon-clock\"></use>\n            </svg>\n            <span class=\"recipe__info-data recipe__info-data--minutes\">${\n              recipe.cooking_time\n            }</span>\n            <span class=\"recipe__info-text\">minutes</span>\n          </div>\n          <div class=\"recipe__info\">\n            <svg class=\"recipe__info-icon\">\n              <use href=\"src/img/icons.svg#icon-users\"></use>\n            </svg>\n            <span class=\"recipe__info-data recipe__info-data--people\">${\n              recipe.servings\n            }</span>\n            <span class=\"recipe__info-text\">servings</span>\n\n            <div class=\"recipe__info-buttons\">\n              <button class=\"btn--tiny btn--increase-servings\">\n                <svg>\n                  <use href=\"src/img/icons.svg#icon-minus-circle\"></use>\n                </svg>\n              </button>\n              <button class=\"btn--tiny btn--increase-servings\">\n                <svg>\n                  <use href=\"src/img/icons.svg#icon-plus-circle\"></use>\n                </svg>\n              </button>\n            </div>\n          </div>\n\n          <div class=\"recipe__user-generated\">\n            <svg>\n              <use href=\"src/img/icons.svg#icon-user\"></use>\n            </svg>\n          </div>\n          <button class=\"btn--round\">\n            <svg class=\"\">\n              <use href=\"src/img/icons.svg#icon-bookmark-fill\"></use>\n            </svg>\n          </button>\n        </div>\n\n        <div class=\"recipe__ingredients\">\n          <h2 class=\"heading--2\">Recipe ingredients</h2>\n          <ul class=\"recipe__ingredient-list\">\n${recipe.ingredients\n  .map(el => {\n    return `<li class=\"recipe__ingredient\">\n              <svg class=\"recipe__icon\">\n                <use href=\"src/img/icons.svg#icon-check\"></use>\n              </svg>\n              <div class=\"recipe__quantity\">${el.quantity}</div>\n              <div class=\"recipe__description\">\n                <span class=\"recipe__unit\">${el.unit}</span>\n                ${el.description}\n              </div>\n            </li>`;\n  })\n  .join('')}\n           \n          </ul>\n        </div>\n\n        <div class=\"recipe__directions\">\n          <h2 class=\"heading--2\">How to cook it</h2>\n          <p class=\"recipe__directions-text\">\n            This recipe was carefully designed and tested by\n            <span class=\"recipe__publisher\">The Pioneer Woman</span>. Please check out\n            directions at their website.\n          </p>\n          <a\n            class=\"btn--small recipe__btn\"\n            href=\"http://thepioneerwoman.com/cooking/pasta-with-tomato-cream-sauce/\"\n            target=\"_blank\"\n          >\n            <span>Directions</span>\n            <svg class=\"search__icon\">\n              <use href=\"src/img/icons.svg#icon-arrow-right\"></use>\n            </svg>\n          </a>\n        </div>\n    `;\n  qs('.recipe').innerHTML = '';\n  qs('.recipe').insertAdjacentHTML('afterbegin', html);\n}\nrenderRecipe();\n"],"names":[],"version":3,"file":"Forkify.62406edb.js.map","sourceRoot":"/__parcel_source_root/"}