{"mappings":"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","sources":["src/js/controller.js"],"sourcesContent":["const recipeContainer = document.querySelector('.recipe');\r\n\r\nconst timeout = function (s) {\r\n  return new Promise(function (_, reject) {\r\n    setTimeout(function () {\r\n      reject(new Error(`Request took too long! Timeout after ${s} second`));\r\n    }, s * 1000);\r\n  });\r\n};\r\n\r\n// https://forkify-api.herokuapp.com/v2\r\nconst Dummy = {\r\n  data: {\r\n    recipe: {\r\n      cooking_time: 120,\r\n      id: '664c8f193e7aa067e94e8297',\r\n      image_url: 'http://forkify-api.herokuapp.com/images/100111309d9.jpg',\r\n      ingredients: [\r\n        {\r\n          description: 'white sugar',\r\n          quantity: 1.5,\r\n          unit: 'tsps',\r\n        },\r\n        {\r\n          description: 'warm water',\r\n          quantity: 1,\r\n          unit: 'cup',\r\n        },\r\n        {\r\n          description: 'active dry yeast',\r\n          quantity: 1.5,\r\n          unit: 'tsps',\r\n        },\r\n        {\r\n          description: 'olive oil',\r\n          quantity: 1,\r\n          unit: 'tbsp',\r\n        },\r\n        {\r\n          description: 'salt',\r\n          quantity: 0.5,\r\n          unit: 'tsp',\r\n        },\r\n        {\r\n          description: 'all-purpose flour',\r\n          quantity: 2,\r\n          unit: 'cups',\r\n        },\r\n        {\r\n          description: 'can crushed tomatoes',\r\n          quantity: 1,\r\n          unit: '',\r\n        },\r\n        {\r\n          description: 'packed brown sugar',\r\n          quantity: 1,\r\n          unit: 'tbsp',\r\n        },\r\n        {\r\n          description: 'garlic powder',\r\n          quantity: 0.5,\r\n          unit: 'tsp',\r\n        },\r\n        {\r\n          description: 'olive oil',\r\n          quantity: 1,\r\n          unit: 'tsp',\r\n        },\r\n        {\r\n          description: 'salt',\r\n          quantity: 0.5,\r\n          unit: 'tsp',\r\n        },\r\n        {\r\n          description: 'shredded mozzarella cheese divided',\r\n          quantity: 3,\r\n          unit: 'cups',\r\n        },\r\n        {\r\n          description: 'bulk italian sausage',\r\n          quantity: 0.5,\r\n          unit: 'pound',\r\n        },\r\n        {\r\n          description: 'package sliced pepperoni',\r\n          quantity: 1,\r\n          unit: '',\r\n        },\r\n        {\r\n          description: 'package sliced fresh mushrooms',\r\n          quantity: 1,\r\n          unit: '',\r\n        },\r\n        {\r\n          description: 'green bell pepper chopped',\r\n          quantity: 1,\r\n          unit: '',\r\n        },\r\n        {\r\n          description: 'red bell pepper chopped',\r\n          quantity: 1,\r\n          unit: '',\r\n        },\r\n      ],\r\n      publisher: 'All Recipes',\r\n      servings: 4,\r\n      source_url:\r\n        'http://allrecipes.com/Recipe/Double-Crust-Stuffed-Pizza/Detail.aspx',\r\n      title: 'Double Crust Stuffed Pizza',\r\n    },\r\n  },\r\n  status: 'success',\r\n};\r\n\r\n///////////////////////////////////////\r\nfunction qs(params) {\r\n  return document.querySelector(params);\r\n}\r\nconst results = qs('.results');\r\nasync function getDishes(dish) {\r\n  try {\r\n    console.log('fetching');\r\n    const res = await fetch(\r\n      `https://forkify-api.jonas.io/api/v2/recipes/?search=${dish}`\r\n      // `https://www.themealdb.com/api/json/v1/1/search.php?s=${dish}`\r\n    );\r\n    const data = await res.json();\r\n    if (!res.ok) throw new Error(`${data.message} (${res.status})`);\r\n    return data;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n}\r\nasync function getRecipe(id) {\r\n  try {\r\n    console.log('fetching');\r\n    const res = await fetch(\r\n      `https://forkify-api.jonas.io/api/v2/recipes/${id}`\r\n      // `https://www.themealdb.com/api/json/v1/1/search.php?s=${dish}`\r\n    );\r\n    const data = await res.json();\r\n    if (!res.ok) throw new Error(`${data.message} (${res.status})`);\r\n    return data;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n}\r\n//// Showing results///\r\nconst searchForm = qs('.search');\r\nsearchForm.addEventListener('submit', async function (e) {\r\n  e.preventDefault();\r\n  const dishName = qs('.search__field').value;\r\n  getDishes(dishName).then(data => {\r\n    console.log(data.data);\r\n    const { recipes } = data.data;\r\n    console.log(recipes);\r\n\r\n    recipes.forEach(r => {\r\n      const html = `\r\n      <li class=\"preview\">\r\n            <a class=\"preview__link preview__link--active\" href=\"${r.id}\">\r\n              <figure class=\"preview__fig\">\r\n                <img src=${r.image_url} alt=\"Test\" />\r\n              </figure>\r\n              <div class=\"preview__data\">\r\n                <h4 class=\"preview__title\">${r.title}</h4>\r\n                <p class=\"preview__publisher\">${r.publisher}</p>\r\n                <div class=\"preview__user-generated\">\r\n                  <svg>\r\n                    <use href=\"src/img/icons.svg#icon-user\"></use>\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n            </a>\r\n          </li>\r\n      `;\r\n      results.insertAdjacentHTML('afterbegin', html);\r\n    });\r\n  });\r\n});\r\n\r\nfunction renderRecipe() {\r\n  getRecipe('664c8f193e7aa067e94e8297').then(data => {\r\n    let { recipe } = data.data;\r\n    console.log(recipe);\r\n    const html = `\r\n    <figure class=\"recipe__fig\">\r\n          <img src=\"${recipe.image_url}\" alt=\"Tomato\" class=\"recipe__img\" />\r\n          <h1 class=\"recipe__title\">\r\n            <span>${recipe.title}</span>\r\n          </h1>\r\n        </figure>\r\n\r\n        <div class=\"recipe__details\">\r\n          <div class=\"recipe__info\">\r\n            <svg class=\"recipe__info-icon\">\r\n              <use href=\"src/img/icons.svg#icon-clock\"></use>\r\n            </svg>\r\n            <span class=\"recipe__info-data recipe__info-data--minutes\">${\r\n              recipe.cooking_time\r\n            }</span>\r\n            <span class=\"recipe__info-text\">minutes</span>\r\n          </div>\r\n          <div class=\"recipe__info\">\r\n            <svg class=\"recipe__info-icon\">\r\n              <use href=\"src/img/icons.svg#icon-users\"></use>\r\n            </svg>\r\n            <span class=\"recipe__info-data recipe__info-data--people\">${\r\n              recipe.servings\r\n            }</span>\r\n            <span class=\"recipe__info-text\">servings</span>\r\n\r\n            <div class=\"recipe__info-buttons\">\r\n              <button class=\"btn--tiny btn--increase-servings\">\r\n                <svg>\r\n                  <use href=\"src/img/icons.svg#icon-minus-circle\"></use>\r\n                </svg>\r\n              </button>\r\n              <button class=\"btn--tiny btn--increase-servings\">\r\n                <svg>\r\n                  <use href=\"src/img/icons.svg#icon-plus-circle\"></use>\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"recipe__user-generated\">\r\n            <svg>\r\n              <use href=\"src/img/icons.svg#icon-user\"></use>\r\n            </svg>\r\n          </div>\r\n          <button class=\"btn--round\">\r\n            <svg class=\"\">\r\n              <use href=\"src/img/icons.svg#icon-bookmark-fill\"></use>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        <div class=\"recipe__ingredients\">\r\n          <h2 class=\"heading--2\">Recipe ingredients</h2>\r\n          <ul class=\"recipe__ingredient-list\">\r\n${recipe.ingredients\r\n  .map(el => {\r\n    return `<li class=\"recipe__ingredient\">\r\n              <svg class=\"recipe__icon\">\r\n                <use href=\"src/img/icons.svg#icon-check\"></use>\r\n              </svg>\r\n              <div class=\"recipe__quantity\">${el.quantity}</div>\r\n              <div class=\"recipe__description\">\r\n                <span class=\"recipe__unit\">${el.unit}</span>\r\n                ${el.description}\r\n              </div>\r\n            </li>`;\r\n  })\r\n  .join('')}\r\n           \r\n          </ul>\r\n        </div>\r\n\r\n        <div class=\"recipe__directions\">\r\n          <h2 class=\"heading--2\">How to cook it</h2>\r\n          <p class=\"recipe__directions-text\">\r\n            This recipe was carefully designed and tested by\r\n            <span class=\"recipe__publisher\">${\r\n              recipe.publisher\r\n            }</span>. Please check out\r\n            directions at their website.\r\n          </p>\r\n          <a\r\n            class=\"btn--small recipe__btn\"\r\n            href=\"${recipe.source_url}\"\r\n            target=\"_blank\"\r\n          >\r\n            <span>Directions</span>\r\n            <svg class=\"search__icon\">\r\n              <use href=\"src/img/icons.svg#icon-arrow-right\"></use>\r\n            </svg>\r\n          </a>\r\n        </div>\r\n    `;\r\n\r\n    qs('.recipe').innerHTML = '';\r\n    qs('.recipe').insertAdjacentHTML('afterbegin', html);\r\n  });\r\n}\r\nrenderRecipe();\r\n"],"names":[],"version":3,"file":"Forkify.62406edb.js.map","sourceRoot":"/__parcel_source_root/"}